services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    ports:
      - "8000:80"
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    volumes:
      - .:/var/www/html:rw
    networks:
      - laravel

    # if /var/www/html/vendor is empty, copy /var/www/vendor to /var/www/html/vendor
    # delete all log files in /var/www/html/storage/logs
    # create .env file if not exists and generate key (only if .env file does not exist)
    # start laravel with supervisord
    command: >
      sh -c "if [ -z \"$(ls -A /var/www/html/vendor)\" ]; then cp -r /var/www/vendor /var/www/html; fi;
              rm -rf /var/www/html/storage/logs/*.log;
              if [ ! -f /var/www/html/.env ]; then cp /var/www/html/.env.example /var/www/html/.env
                php artisan key:generate; fi;
              supervisord -c supervisord.conf;"


  mariadb:
    image: mariadb
    restart: unless-stopped
    user: root
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=dockertestrootpassword
      - MYSQL_DATABASE=dockertestdb
      - MYSQL_USER=dockertestuser
      - MYSQL_PASSWORD=dockertestpassword
    ports:
      - "9002:3306"
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin
    ports:
      - "8080:80"
    depends_on:
      - mariadb
    environment:
      - PMA_HOST=mariadb
      - PMA_PORT=3306
    networks:
        - laravel

  node:
    build:
      context: .
      target: node-dev
    user: node
    volumes:
      - .:/var/www/html:rw
    networks:
        - laravel
    ports:
        - "5173:5173"
    # if /var/www/html/node_modules is empty, copy /var/www/node_modules to /var/www/html/node_modules
    command: >
      sh -c "if [ -z \"$(ls -A /var/www/html/node_modules)\" ]; then cp -r /var/www/node_modules /var/www/html; fi;
                npm run dev;"

networks:
  laravel:
    driver: bridge

volumes:
  db-data:
